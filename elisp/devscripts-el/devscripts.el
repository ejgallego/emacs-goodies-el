;; Routines to do devscripts-compatible emacs routines.
;; copyright 2002 Junichi Uekawa.

(defun debuild ()
  "Run debuild in the current directory"
  (interactive)
  (let* ((debuild-buffer (concat "*debuild*" default-directory))
	 (debuild-process (concat "debuild-process-" default-directory)))
    (switch-to-buffer debuild-buffer)
    (kill-region (point-min) (point-max))
    (compilation-mode)
    (start-process debuild-process debuild-buffer "/usr/bin/debuild")))

(defun debi ()
  "Run debi in the current directory, to install debian packages generated by previous invocation of debuild"
  (interactive)
  (let* ((debi-buffer (concat "*debi*" default-directory))
	 (debi-process (concat "debi-process-" default-directory)))
    (switch-to-buffer debi-buffer)
    (kill-region (point-min) (point-max))
    (compilation-mode)
    (start-process debi-process debi-buffer "/usr/bin/sudo" "/usr/bin/debi")))

(defun debc ()
  "Run debc in the current directory, to install debian packages generated by previous invocation of debuild"
  (interactive)
  (let* ((debc-buffer (concat "*debc*" default-directory))
	 (debc-process (concat "debc-process-" default-directory)))
    (switch-to-buffer debc-buffer)
    (kill-region (point-min) (point-max))
    (devscripts-debc-mode)
    (start-process debc-process debc-buffer "/usr/bin/debc")))


(defun devscripts-debc-mode ()
  "Mode to view debc output
\\{devscripts-debc-mode-map}
"
  (interactive)
  (kill-all-local-variables)
  (setq major-mode 'devscripts-debc-mode)
  (setq mode-name "debc")
  (mapcar 'make-local-variable '(font-lock-defaults))
  (use-local-map devscripts-debc-mode-map)
  (set-syntax-table devscripts-debc-mode-syntax-table)
  (setq font-lock-defaults 
	'(
					;keywords start here
	  (("^[a-z].*deb$" . font-lock-string-face)
	   ("^ \\([A-Z][-A-Za-z]+:\\)\\(.*\\)$" (1 font-lock-keyword-face) (2 font-lock-warning-face))
	   ("^[^ ].*$" . font-lock-comment-face)
	   )
	  nil		;keywords-only
	  nil		;case-fold
	  ()		;syntax-alist
	  ))
  (run-hooks 'devscripts-debc-mode-hook)
)

(defvar devscripts-debc-mode-map nil "keymap for devscripts debc mode")
(defvar devscripts-debc-mode-syntax-table nil "syntax table for devscripts debc mode")
(if devscripts-debc-mode-syntax-table
         ()              ; Do not change the table if it is already set up.
       (setq devscripts-debc-mode-syntax-table (make-syntax-table))
       (modify-syntax-entry ?\" ".   " text-mode-syntax-table)
       (modify-syntax-entry ?\\ ".   " text-mode-syntax-table)
       (modify-syntax-entry ?' "w   " text-mode-syntax-table))
